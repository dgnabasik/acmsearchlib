// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: wordscore.proto

package wordscore

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	math "math"
)

import (
	context "context"
	api "github.com/micro/go-micro/v2/api"
	client "github.com/micro/go-micro/v2/client"
	server "github.com/micro/go-micro/v2/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for WordScoreServiceRpcInterface service

func NewWordScoreServiceRpcInterfaceEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for WordScoreServiceRpcInterface service

type WordScoreServiceRpcInterfaceService interface {
	GetWordScore(ctx context.Context, in *GetWordScoreRequest, opts ...client.CallOption) (*GetWordScoreResponse, error)
	CreateWordScore(ctx context.Context, in *CreateWordScoreRequest, opts ...client.CallOption) (*CreateWordScoreResponse, error)
}

type wordScoreServiceRpcInterfaceService struct {
	c    client.Client
	name string
}

func NewWordScoreServiceRpcInterfaceService(name string, c client.Client) WordScoreServiceRpcInterfaceService {
	return &wordScoreServiceRpcInterfaceService{
		c:    c,
		name: name,
	}
}

func (c *wordScoreServiceRpcInterfaceService) GetWordScore(ctx context.Context, in *GetWordScoreRequest, opts ...client.CallOption) (*GetWordScoreResponse, error) {
	req := c.c.NewRequest(c.name, "WordScoreServiceRpcInterface.GetWordScore", in)
	out := new(GetWordScoreResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wordScoreServiceRpcInterfaceService) CreateWordScore(ctx context.Context, in *CreateWordScoreRequest, opts ...client.CallOption) (*CreateWordScoreResponse, error) {
	req := c.c.NewRequest(c.name, "WordScoreServiceRpcInterface.CreateWordScore", in)
	out := new(CreateWordScoreResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for WordScoreServiceRpcInterface service

type WordScoreServiceRpcInterfaceHandler interface {
	GetWordScore(context.Context, *GetWordScoreRequest, *GetWordScoreResponse) error
	CreateWordScore(context.Context, *CreateWordScoreRequest, *CreateWordScoreResponse) error
}

func RegisterWordScoreServiceRpcInterfaceHandler(s server.Server, hdlr WordScoreServiceRpcInterfaceHandler, opts ...server.HandlerOption) error {
	type wordScoreServiceRpcInterface interface {
		GetWordScore(ctx context.Context, in *GetWordScoreRequest, out *GetWordScoreResponse) error
		CreateWordScore(ctx context.Context, in *CreateWordScoreRequest, out *CreateWordScoreResponse) error
	}
	type WordScoreServiceRpcInterface struct {
		wordScoreServiceRpcInterface
	}
	h := &wordScoreServiceRpcInterfaceHandler{hdlr}
	return s.Handle(s.NewHandler(&WordScoreServiceRpcInterface{h}, opts...))
}

type wordScoreServiceRpcInterfaceHandler struct {
	WordScoreServiceRpcInterfaceHandler
}

func (h *wordScoreServiceRpcInterfaceHandler) GetWordScore(ctx context.Context, in *GetWordScoreRequest, out *GetWordScoreResponse) error {
	return h.WordScoreServiceRpcInterfaceHandler.GetWordScore(ctx, in, out)
}

func (h *wordScoreServiceRpcInterfaceHandler) CreateWordScore(ctx context.Context, in *CreateWordScoreRequest, out *CreateWordScoreResponse) error {
	return h.WordScoreServiceRpcInterfaceHandler.CreateWordScore(ctx, in, out)
}

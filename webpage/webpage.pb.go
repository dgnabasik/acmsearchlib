// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: webpage.proto

package webpage

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type WebError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *WebError) Reset() {
	*x = WebError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webpage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebError) ProtoMessage() {}

func (x *WebError) ProtoReflect() protoreflect.Message {
	mi := &file_webpage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebError.ProtoReflect.Descriptor instead.
func (*WebError) Descriptor() ([]byte, []int) {
	return file_webpage_proto_rawDescGZIP(), []int{0}
}

func (x *WebError) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WebError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// UnixTimeStamp int64
type WebpageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic     string `protobuf:"bytes,1,opt,name=Topic,proto3" json:"Topic,omitempty"`
	SinceDate int64  `protobuf:"varint,2,opt,name=SinceDate,proto3" json:"SinceDate,omitempty"`
}

func (x *WebpageRequest) Reset() {
	*x = WebpageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webpage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebpageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebpageRequest) ProtoMessage() {}

func (x *WebpageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_webpage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebpageRequest.ProtoReflect.Descriptor instead.
func (*WebpageRequest) Descriptor() ([]byte, []int) {
	return file_webpage_proto_rawDescGZIP(), []int{1}
}

func (x *WebpageRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *WebpageRequest) GetSinceDate() int64 {
	if x != nil {
		return x.SinceDate
	}
	return 0
}

type AcmArticle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	ArchiveDate   int64  `protobuf:"varint,2,opt,name=ArchiveDate,proto3" json:"ArchiveDate,omitempty"`
	ArticleNumber string `protobuf:"bytes,3,opt,name=ArticleNumber,proto3" json:"ArticleNumber,omitempty"`
	Title         string `protobuf:"bytes,4,opt,name=Title,proto3" json:"Title,omitempty"`
	ImageSource   string `protobuf:"bytes,5,opt,name=ImageSource,proto3" json:"ImageSource,omitempty"`
	JournalName   string `protobuf:"bytes,6,opt,name=JournalName,proto3" json:"JournalName,omitempty"`
	AuthorName    string `protobuf:"bytes,7,opt,name=AuthorName,proto3" json:"AuthorName,omitempty"`
	JournalDate   int64  `protobuf:"varint,8,opt,name=JournalDate,proto3" json:"JournalDate,omitempty"`
	WebReference  string `protobuf:"bytes,9,opt,name=WebReference,proto3" json:"WebReference,omitempty"`
	Summary       string `protobuf:"bytes,10,opt,name=Summary,proto3" json:"Summary,omitempty"`
}

func (x *AcmArticle) Reset() {
	*x = AcmArticle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webpage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcmArticle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcmArticle) ProtoMessage() {}

func (x *AcmArticle) ProtoReflect() protoreflect.Message {
	mi := &file_webpage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcmArticle.ProtoReflect.Descriptor instead.
func (*AcmArticle) Descriptor() ([]byte, []int) {
	return file_webpage_proto_rawDescGZIP(), []int{2}
}

func (x *AcmArticle) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AcmArticle) GetArchiveDate() int64 {
	if x != nil {
		return x.ArchiveDate
	}
	return 0
}

func (x *AcmArticle) GetArticleNumber() string {
	if x != nil {
		return x.ArticleNumber
	}
	return ""
}

func (x *AcmArticle) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AcmArticle) GetImageSource() string {
	if x != nil {
		return x.ImageSource
	}
	return ""
}

func (x *AcmArticle) GetJournalName() string {
	if x != nil {
		return x.JournalName
	}
	return ""
}

func (x *AcmArticle) GetAuthorName() string {
	if x != nil {
		return x.AuthorName
	}
	return ""
}

func (x *AcmArticle) GetJournalDate() int64 {
	if x != nil {
		return x.JournalDate
	}
	return 0
}

func (x *AcmArticle) GetWebReference() string {
	if x != nil {
		return x.WebReference
	}
	return ""
}

func (x *AcmArticle) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

type WebpageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic          string        `protobuf:"bytes,1,opt,name=Topic,proto3" json:"Topic,omitempty"`
	Werror         *WebError     `protobuf:"bytes,2,opt,name=Werror,proto3" json:"Werror,omitempty"`
	AcmArticleList []*AcmArticle `protobuf:"bytes,3,rep,name=AcmArticleList,proto3" json:"AcmArticleList,omitempty"`
}

func (x *WebpageResponse) Reset() {
	*x = WebpageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webpage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebpageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebpageResponse) ProtoMessage() {}

func (x *WebpageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_webpage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebpageResponse.ProtoReflect.Descriptor instead.
func (*WebpageResponse) Descriptor() ([]byte, []int) {
	return file_webpage_proto_rawDescGZIP(), []int{3}
}

func (x *WebpageResponse) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *WebpageResponse) GetWerror() *WebError {
	if x != nil {
		return x.Werror
	}
	return nil
}

func (x *WebpageResponse) GetAcmArticleList() []*AcmArticle {
	if x != nil {
		return x.AcmArticleList
	}
	return nil
}

var File_webpage_proto protoreflect.FileDescriptor

var file_webpage_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x77, 0x65, 0x62, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x77, 0x65, 0x62, 0x70, 0x61, 0x67, 0x65, 0x22, 0x38, 0x0a, 0x08, 0x57, 0x65, 0x62, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x44, 0x0a, 0x0e, 0x57, 0x65, 0x62, 0x70, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69,
	0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x53,
	0x69, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0xbe, 0x02, 0x0a, 0x0a, 0x41, 0x63, 0x6d,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4a, 0x6f, 0x75, 0x72, 0x6e,
	0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4a, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4a, 0x6f, 0x75,
	0x72, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x57,
	0x65, 0x62, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x57, 0x65, 0x62, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x8f, 0x01, 0x0a, 0x0f, 0x57, 0x65,
	0x62, 0x70, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x12, 0x29, 0x0a, 0x06, 0x57, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x65, 0x62, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x57, 0x65,
	0x62, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x57, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3b,
	0x0a, 0x0e, 0x41, 0x63, 0x6d, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x77, 0x65, 0x62, 0x70, 0x61, 0x67, 0x65,
	0x2e, 0x41, 0x63, 0x6d, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x0e, 0x41, 0x63, 0x6d,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x32, 0x53, 0x0a, 0x0e, 0x57,
	0x65, 0x62, 0x70, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a,
	0x0a, 0x4e, 0x65, 0x77, 0x57, 0x65, 0x62, 0x70, 0x61, 0x67, 0x65, 0x12, 0x17, 0x2e, 0x77, 0x65,
	0x62, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x57, 0x65, 0x62, 0x70, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x77, 0x65, 0x62, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x57,
	0x65, 0x62, 0x70, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_webpage_proto_rawDescOnce sync.Once
	file_webpage_proto_rawDescData = file_webpage_proto_rawDesc
)

func file_webpage_proto_rawDescGZIP() []byte {
	file_webpage_proto_rawDescOnce.Do(func() {
		file_webpage_proto_rawDescData = protoimpl.X.CompressGZIP(file_webpage_proto_rawDescData)
	})
	return file_webpage_proto_rawDescData
}

var file_webpage_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_webpage_proto_goTypes = []interface{}{
	(*WebError)(nil),        // 0: webpage.WebError
	(*WebpageRequest)(nil),  // 1: webpage.WebpageRequest
	(*AcmArticle)(nil),      // 2: webpage.AcmArticle
	(*WebpageResponse)(nil), // 3: webpage.WebpageResponse
}
var file_webpage_proto_depIdxs = []int32{
	0, // 0: webpage.WebpageResponse.Werror:type_name -> webpage.WebError
	2, // 1: webpage.WebpageResponse.AcmArticleList:type_name -> webpage.AcmArticle
	1, // 2: webpage.WebpageService.NewWebpage:input_type -> webpage.WebpageRequest
	3, // 3: webpage.WebpageService.NewWebpage:output_type -> webpage.WebpageResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_webpage_proto_init() }
func file_webpage_proto_init() {
	if File_webpage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_webpage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webpage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebpageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webpage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcmArticle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webpage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebpageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_webpage_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_webpage_proto_goTypes,
		DependencyIndexes: file_webpage_proto_depIdxs,
		MessageInfos:      file_webpage_proto_msgTypes,
	}.Build()
	File_webpage_proto = out.File
	file_webpage_proto_rawDesc = nil
	file_webpage_proto_goTypes = nil
	file_webpage_proto_depIdxs = nil
}
